name: tests
on:
  pull_request:

jobs:
  lint:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53
          # Optional: The mode to install golangci-lint. It can be 'binary' or 'goinstall'.
          # install-mode: "goinstall"

  test:
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ci_db_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    e

    runs-on: ubuntu-latest
    strategy:
      matrix:
        scope: [
        "unit",
        "integration"
        ]
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.6
          cache: true

      - name: Test unit
        run: go test -tags=${{ matrix.scope }} -race -coverprofile ${{ matrix.scope }}.txt -covermode atomic ./...

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./${{ matrix.scope }}.txt
          flags: ${{ matrix.scope }}
          name: ${{ matrix.scope }}
