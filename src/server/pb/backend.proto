syntax = "proto3";

package base;
option go_package = ".";

message Empty{}

// Category types
enum Category {
  CATEGORY_PASS = 0;
  CATEGORY_TEXT = 1;
  CATEGORY_CARD = 2;
  CATEGORY_FILE = 3;
}

message CategoryType_DTO{
  Category Category = 1;
}

message DataInfo{
  string DataID = 1;
  string Metadata = 2;
}

message CategoryHead_DTO{
  repeated DataInfo info = 1;
}

// data types to transfer
message DataID_DTO{
  string ID = 1;
}

message SecureData_DTO{
  bytes Data = 1;
  string Metadata = 2;
}

service GophKeeper {
  rpc Ping (Empty) returns (Empty) {} // ping server availability

  rpc GetCategoryHead (CategoryType_DTO) returns (CategoryHead_DTO) {}

  rpc StoreLoginPassword (SecureData_DTO) returns (DataID_DTO) {}
  rpc LoadLoginPassword (DataID_DTO) returns (SecureData_DTO) {}

//  rpc StoreTextData (SecureData_DTO) returns (DataID_DTO) {}
//  rpc LoadTextData (DataID_DTO) returns (SecureData_DTO) {}

//  rpc StoreCreditCard (SecureData_DTO) returns (DataID_DTO) {}
//  rpc LoadCreditCard (DataID_DTO) returns (SecureData_DTO) {}

//  rpc StoreCreditCard (SecureData_DTO) returns (DataID_DTO) {}
//  rpc LoadCreditCard (DataID_DTO) returns (SecureData_DTO) {}
}



message LoginPassPair{
  string Login = 1;
  string Password = 2;
}

message SessionID_DTO{
  string SID = 1;
}
service Auth {
  rpc Login (LoginPassPair) returns (SessionID_DTO) {}
  rpc KickOtherSession (LoginPassPair) returns (SessionID_DTO) {}
  rpc Register (LoginPassPair) returns (SessionID_DTO) {}
}
